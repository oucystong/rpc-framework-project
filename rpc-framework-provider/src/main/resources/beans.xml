<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:srpc="https://www.srpc.com/schema/srpc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       https://www.srpc.com/schema/srpc
       https://www.srpc.com/schema/srpc/srpc-schema.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!--    组件扫描-->
    <context:component-scan base-package="com.ouc.rpc.framework.provider"></context:component-scan>
    <!--    应用名称-->
    <srpc:application name="service_provider"></srpc:application>
    <!--  服务注册地址  -->
    <srpc:zk address="127.0.0.1:2181"></srpc:zk>
    <!--  服务端  -->
    <srpc:server port="9220"></srpc:server>
    <!--    暴露服务-->
<!--    <srpc:service id="greetingService" name="com.ouc.rpc.framework.api.service.GreetingService"-->
<!--                  impl="com.ouc.rpc.framework.provider.api.GreetingServiceImpl" serialization="hessian2"-->
<!--                  net-protocol="srpc"></srpc:service>-->

    <srpc:service id="novelAuthorService" name="com.ouc.rpc.framework.api.service.NovelAuthorService"
                  impl="com.ouc.rpc.framework.provider.api.NovelAuthorServiceImpl" serialization="hessian2"
                  net-protocol="srpc"></srpc:service>

    <!--    <srpc:service id="secondService" name="com.ouc.rpc.framework.api.service.SecondService"-->
    <!--                  impl="com.ouc.rpc.framework.provider.api.SecondServiceImpl"></srpc:service>-->

    <!--    <srpc:service id="strService" name="com.ouc.rpc.framework.api.performance.StrService"-->
    <!--                  impl="com.ouc.rpc.framework.provider.api.StrServiceImpl"></srpc:service>-->
<!--    <srpc:service id="novelAuthorService" name="com.ouc.rpc.framework.api.service.NovelAuthorService"-->
<!--                  impl="com.ouc.rpc.framework.provider.api.NovelAuthorServiceImpl"></srpc:service>-->

<!--    <srpc:service id="authorPublicationPriceService"-->
<!--                  name="com.ouc.rpc.framework.api.service.AuthorPublicationPriceService"-->
<!--                  impl="com.ouc.rpc.framework.provider.api.AuthorPublicationPriceServiceImpl"></srpc:service>-->

</beans>



